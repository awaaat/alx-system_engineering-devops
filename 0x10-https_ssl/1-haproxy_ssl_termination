# /etc/haproxy/haproxy.cfg
# Configuration for HAProxy with SSL termination for HTTPS traffic
# Purpose: Handles encrypted traffic for www.<yourdomain>.com, decrypts it, and forwards to backend web servers
# Requirements:
#   - HAProxy 1.5 or higher
#   - SSL certificate generated by Certbot
#   - Backend servers return a page with "ALX" at the root (/)

# ---- GLOBAL SECTION ----
global
    daemon                   # Run HAProxy in the background
    maxconn 2048             # Maximum simultaneous connections
    user haproxy             # Run as 'haproxy' user
    group haproxy            # Run as 'haproxy' group
    log /dev/log local0      # Send logs to local0 facility (for syslog)
    # SSL tuning for better performance
    tune.ssl.default-dh-param 2048  # Use 2048-bit Diffie-Hellman parameters for SSL

# ---- DEFAULTS SECTION ----
defaults
    mode http                          # Operate in HTTP mode for layer 7 processing
    log global                         # Inherit global logging settings
    option httplog                     # Use detailed HTTP logging
    option dontlognull                 # Do not log null connections
    option http-server-close           # Close server connections after each request
    option forwardfor except 127.0.0.0/8  # Add X-Forwarded-For header, except for localhost
    option redispatch                  # Retry failed connections
    retries 3                          # Retry up to 3 times on failure
    timeout http-request 10s          # Timeout for HTTP request headers
    timeout queue 1m                  # Timeout for queued requests
    timeout connect 10s               # Timeout for connecting to backend servers
    timeout client 1m                 # Timeout for client inactivity
    timeout server 1m                 # Timeout for server inactivity
    timeout http-keep-alive 10s       # Timeout for keep-alive connections
    timeout check 10s                 # Timeout for health checks
    maxconn 3000                      # Maximum connections per frontend/backend

# ---- FRONTEND SECTION (HTTP) ----
frontend http_frontend
    bind *:80                        # Listen on port 80 for HTTP traffic
    redirect scheme https code 301 if !{ ssl_fc }  # Redirect all HTTP traffic to HTTPS
    # This ensures all requests use encrypted HTTPS

# ---- FRONTEND SECTION (HTTPS) ----
frontend https_frontend
    bind *:443 ssl crt /etc/letsencrypt/live/www.<yourdomain>.com/fullchain.pem
    # â†‘ Listen on port 443 for HTTPS, using Certbot-generated SSL certificate
    # Replace <yourdomain>.com with your actual domain (e.g., holberton.online)
    mode http                        # Operate in HTTP mode
    default_backend web_servers       # Forward traffic to the web_servers backend

# ---- BACKEND SECTION ----
backend web_servers
    balance roundrobin               # Distribute traffic evenly across servers
    server web-01 34.198.248.145:80 check  # Backend server web-01 with health check
    server web-02 54.89.38.100:80 check    # Backend server web-02 with health check
    # Replace IPs with your actual web-01 and web-02 server IPs if different